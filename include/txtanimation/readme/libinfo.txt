filename:	txtanimation.h	
version: 	3.3-stable/revork1
for:	 	prints animation using special txt files
funcount:	6
structcount:	3
created: 	18/07/2021
created by:	Dolfost

usage:
<:void
run_animation(char[] :> name of txt data file
	      bool   :> delete filename (useful if filename passed to function as non-needed pointer to char))
-prints animation using special txt files

<:void
run_animation_parser(char[] :> name of txt data file)
-checks file for errors, priint debug, ask to prints animation using special txt files, and after that, prints debug information again

changes:
1.1-relase 20/07/2021				added '\t' in run_animation_debug();
1.2-relase 20/07/2021				added frames counter to run_animation_debug();
1.3-relase 20/07/2021				reworked the output of debug results in the run_animation_debug() function,
						added the output of information about the numbers of lines and blocks read;
3.0-stable/rework-1 21/07/2021 - 22/07/2021	bye debug, hello parser! added parser;
3.1-stable/rework-1 25/07/2021			parser: fixed bug with string 'reading line xxx';
3.2-stable/rework-1 26/07/2021			added support for const char[] (only to run_animation());
3.3-stable/rework-1 28/07/2021			deleted 'bool delete filename';



txt files syntax: 
a<float>;
b<unsigned short>; 
a - delay betwen frames in seconds;
b - lines in one frame;
[x symbols] - blind area, everything in this zone will be ignored

for example: 
a = 0.2
b = 3

schematic:
--------------------------<txt file start>
a(delay)<space>b(lines in frame)[4095]<enter>
[4095]<enter>
12>
13>:block(frame with b lines)
14>
[4095]<enter>
13>
14>:block(frame with b lines)
15>
[4095]<enter>
14>
15>:block(frame with b lines)
16>
--------------------------<eof>

example:
--------------------------<txt file start>
0.2 3

12
13
14

13
14
15

14
15
16

15
16
17
--------------------------<eof>

rule: dont leave empty line in end of file;

tip: dont use tabs (	);
